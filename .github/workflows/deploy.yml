name: Frontend deployment
on:
  push:
    branches:
      - 'main'
    paths:
      - 'src/**'
  workflow_dispatch:
    inputs:
      env:
        description: 'Environment to deploy to'
        required: true
        default: 'prod'

permissions:
  id-token: write
  contents: read

jobs:
  Deply:
    runs-on: ubuntu-latest
    environment: ${{ inputs.env }}
    defaults:
      run:
        shell: bash
    env:
      IAC_PATH: terraform

    steps:
      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: ${{vars.ROLE_TO_ASSUME}}

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Checkout IaC code
        uses: actions/checkout@v4
        with:
          repository: gal-halevi/cloud-resume-challenge-iac
          path: ${{env.IAC_PATH}}
          ref: support-for-multiple-envs

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          # Causing issues when trying to capture terraform output
          terraform_wrapper: false

      - name: Terraform Init
        working-directory: ${{env.IAC_PATH}}/${{vars.IAC_ENV_DIR}}
        run: terraform init

      - name: Deploy
        working-directory: ${{env.IAC_PATH}}/${{vars.IAC_ENV_DIR}}
        env:
          TF_VAR_domain_name:  ${{vars.DOMAIN_NAME}}
          TF_VAR_alternate_domains: ${{vars.ALTERNATE_DOMAINS}}
          TF_VAR_web_assets_path: "../../src"
          TF_VAR_env: ${{vars.ENV}}
        run: terraform apply -auto-approve -input=false

      - name: Get API URL
        id: api_url
        working-directory: ${{env.IAC_PATH}}/${{vars.IAC_ENV_DIR}}
        run: |
          api_url=$(terraform output -raw BE_api_url)
          echo $api_url
          echo "API_URL=$api_url" >> "$GITHUB_OUTPUT"

      - name: Get CloudFront Distribution ID
        id: cf_id
        working-directory: ${{env.IAC_PATH}}/${{vars.IAC_ENV_DIR}}
        run: |
          cf_dist_id=$(terraform output -raw cloudfront_dist_id)
          echo "id=$cf_dist_id"
          echo "CF_DIST_ID=$cf_dist_id" >> "$GITHUB_OUTPUT"

      - name: Get Domain Name
        id: domain_name
        working-directory: ${{env.IAC_PATH}}/${{vars.IAC_ENV_DIR}}
        run: |
          domain_name=$(terraform output -json | jq -r '.cloudfront_urls.value[0]')
          echo "domain_name=$domain_name"
          echo "DOMAIN_NAME=$domain_name" >> "$GITHUB_OUTPUT"

      - name: Invalidate CloudFront Cache
        env:
          CF_DIST_ID: ${{steps.cf_id.outputs.CF_DIST_ID}}
        run: |
          invalidation_id=$(aws cloudfront create-invalidation \
                              --distribution-id $CF_DIST_ID \
                              --paths "/*" \
                              --query 'Invalidation.Id' \
                              --output text)
          for i in {1..30}; do
            STATUS=$(aws cloudfront get-invalidation \
              --distribution-id $CF_DIST_ID \
              --id $invalidation_id \
              --query 'Invalidation.Status' --output text)
            echo "Status: $STATUS"
            if [ "$STATUS" = "Completed" ]; then
              echo "âœ… Invalidation completed"
              break
            fi
            echo "Waiting..."
            sleep 10
          done

      - name: Run Smoke Tests
        env:
          CYPRESS_BASE_URL: ${{steps.domain_name.outputs.DOMAIN_NAME}}
          CYPRESS_API_URL: ${{steps.api_url.outputs.API_URL}}
        uses: cypress-io/github-action@v6